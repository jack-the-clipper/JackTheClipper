<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JackTheClipperData</name>
    </assembly>
    <members>
        <member name="T:JackTheClipperData.DatabaseAdapterFactory">
            <summary>
            The factory for any database adapter
            </summary>
        </member>
        <member name="M:JackTheClipperData.DatabaseAdapterFactory.GetControllerInstance``1">
            <summary>
            Gets the controller instance of any database controller.
            </summary>
            <typeparam name="T">Type of database controller</typeparam>
            <returns>Instance which implements T</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">T not supported</exception>
        </member>
        <member name="T:JackTheClipperData.DataExtensions">
            <summary>
            Contains extension methods of the data package
            </summary>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.GetSHA256(System.String)">
            <summary>
            Gets the SHA256-hash of the given string.
            </summary>
            <param name="toHash">The string to hash.</param>
            <returns>The hash of the given string.</returns>
            <exception cref="T:System.ArgumentNullException">toHash was null</exception>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ConvertToRole(System.Int64)">
            <summary>
            Converts the given database value to a <see cref="T:JackTheClipperCommon.Enums.Role"/>.
            </summary>
            <param name="toConvert">The database value to convert.</param>
            <returns>The determined <see cref="T:JackTheClipperCommon.Enums.Role"/>.</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ToDatabaseRole(JackTheClipperCommon.Enums.Role)">
            <summary>
            Converts a given <see cref="T:JackTheClipperCommon.Enums.Role"/> to the corresponding database value.
            </summary>
            <param name="toConvert">The <see cref="T:JackTheClipperCommon.Enums.Role"/> to convert.</param>
            <returns>The corresponding database value</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ToDatabaseContentType(JackTheClipperCommon.Enums.ContentType)">
            <summary>
            Converts a given <see cref="T:JackTheClipperCommon.Enums.ContentType"/> to the corresponding database value.
            </summary>
            <param name="toConvert">The <see cref="T:JackTheClipperCommon.Enums.ContentType"/> to convert.</param>
            <returns>The corresponding database value</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ConvertToContent(System.Int64)">
            <summary>
            Converts the given database value to a <see cref="T:JackTheClipperCommon.Enums.ContentType"/>.
            </summary>
            <param name="toConvert">The database value to convert.</param>
            <returns>The determined <see cref="T:JackTheClipperCommon.Enums.ContentType"/>.</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ToDatabaseNotification(JackTheClipperCommon.Enums.NotificationSetting)">
            <summary>
            Converts a given <see cref="T:JackTheClipperCommon.Enums.NotificationSetting"/> to the corresponding database value.
            </summary>
            <param name="toConvert">The <see cref="T:JackTheClipperCommon.Enums.NotificationSetting"/> to convert.</param>
            <returns>The corresponding database value</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ConvertToNotification(System.Int64)">
            <summary>
            Converts the given database value to a <see cref="T:JackTheClipperCommon.Enums.NotificationSetting"/>.
            </summary>
            <param name="toConvert">The database value to convert.</param>
            <returns>The determined <see cref="T:JackTheClipperCommon.Enums.NotificationSetting"/>.</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ToDatabaseList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts a given <see cref="T:System.Collections.Generic.IEnumerable`1"/> to the corresponding database value.
            </summary>
            <param name="toConvert">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to convert.</param>
            <returns>The corresponding database value</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ConvertToStringList(System.String)">
            <summary>
            Converts the given database value to an <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.
            </summary>
            <param name="toConvert">The database value to convert.</param>
            <returns>The determined <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.GetStringFromNullable(System.Data.Common.DbDataReader,System.Int32)">
            <summary>
            Gets the string of nullable database field.
            </summary>
            <param name="reader">The reader.</param>
            <param name="ordinal">The ordinal index of the column.</param>
            <returns>The determined string.</returns>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.AppendParameters(MySql.Data.MySqlClient.MySqlCommand,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Appends the parameters.
            </summary>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:JackTheClipperData.DataExtensions.ToStoredProcedureOutParam(System.String,MySql.Data.MySqlClient.MySqlDbType)">
            <summary>
            Converts the given parameters to a stored procedure out param.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns>The generated out param.</returns>
        </member>
        <member name="T:JackTheClipperData.ElasticController">
            <summary>
            Class to control every interaction that needs to be done with the ElasticServer.
            </summary>
        </member>
        <member name="F:JackTheClipperData.ElasticController.ElasticUri">
            <summary>
            The uri of the elastic server.
            </summary>
        </member>
        <member name="F:JackTheClipperData.ElasticController.settings">
            <summary>
            The connections settings
            </summary>
        </member>
        <member name="F:JackTheClipperData.ElasticController.CleanUpJob">
            <summary>
            Reference to the running clean up job.
            </summary>
        </member>
        <member name="M:JackTheClipperData.ElasticController.#cctor">
            <summary>
            Static ctor of <see cref="T:JackTheClipperData.ElasticController"/>
            </summary>
        </member>
        <member name="M:JackTheClipperData.ElasticController.IndexRssFeedItemThreadSafeAsync(JackTheClipperCommon.SharedClasses.Article,JackTheClipperCommon.BusinessObjects.RssKey)">
            <summary>
            Indexes an RSS article thread safe.
            </summary>
            <param name="article">The article.</param>
            <param name="key">The rss key.</param>
        </member>
        <member name="M:JackTheClipperData.ElasticController.IndexArticleThreadSafeAsync(JackTheClipperCommon.SharedClasses.Article)">
            <summary>
            Indexes the web site thread safe.
            </summary>
            <param name="article">The article.</param>
        </member>
        <member name="M:JackTheClipperData.ElasticController.ClearIndex">
            <summary>
            Clears all indexes
            Warning: This is not reversible.
            Proceed with Caution
            </summary>
        </member>
        <member name="M:JackTheClipperData.ElasticController.GetFeedAsync(JackTheClipperCommon.SharedClasses.Feed,System.DateTime,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the requested feed
            </summary>
            <param name="feed">The requested feed.</param>
            <param name="since">The date from which on articles should be considered.</param>
            <param name="articlesPerPage">The amount of articles per page.</param>
            <param name="page">The requested page.</param>
            <param name="unitBlackList">The unit black list.</param>
            <returns>List of articles within the feed</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.GetCompleteFeedAsync(JackTheClipperCommon.SharedClasses.UserSettings,System.DateTime)">
            <summary>
            Gets the complete feed (= all relevant articles in any feed) of a given user setting.
            </summary>
            <param name="userSettings">The user settings for which the complete feed is requested</param>
            <param name="since">The date from which on articles should be considered.</param>
            <returns>List of articles within any feed of the user.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.GetArticleAsync(System.Guid)">
            <summary>Gets a specific Article.</summary>
            <param name="articleId">The Id of the article to search.</param>
            <returns>The article (if exists)</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.IsArticleDuplicate(JackTheClipperCommon.SharedClasses.Article,Nest.IElasticClient)">
            <summary>
            Checks if the specified Article is a duplicate
            </summary>
            <param name="article">Article to check</param>
            <param name="client">The current client</param>
            <returns>A value indicating whether the article already exists.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.IsArticleDuplicate(JackTheClipperCommon.BusinessObjects.ShortArticleKey,Nest.IElasticClient)">
            <summary>
            Checks if the specified Article is a duplicate
            </summary>
            <param name="rssSpeedLookupKey">Rss key to check</param>
            <param name="client">The current client</param>
            <returns>A value indicating whether the article already exists.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.GetSupersetFeedQuery(Nest.QueryContainerDescriptor{JackTheClipperCommon.SharedClasses.Article},JackTheClipperCommon.SharedClasses.Article)">
            <summary>
            Gets the superset feed query
            </summary>
            <param name="descriptor">Current descriptor</param>
            <param name="article">The current article which should be checked for relevance.</param>
            <returns>The superset feed query.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.IndexArticle(JackTheClipperCommon.SharedClasses.Article,Nest.IElasticClient)">
            <summary>
            Indexes the specified article to ElasticServer
            </summary>
            <param name="article">The article.</param>
            <param name="client">ElasticClient.</param>
            <returns>The method result.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.IndexArticle(JackTheClipperCommon.SharedClasses.Article,JackTheClipperCommon.BusinessObjects.ShortArticleKey,Nest.IElasticClient)">
            <summary>
            Indexes the specified article to ElasticServer
            </summary>
            <param name="article">The article.</param>
            <param name="rssLookupKey">The rss lookup key.</param>
            <param name="client">The ElasticClient.</param>
            <returns>The method result.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.DeleteByIdAsync(Nest.IElasticClient,System.String,System.String)">
            <summary>
            Deletes an article by its id.
            </summary>
            <param name="client">The client to use.</param>
            <param name="index">The index to use.</param>
            <param name="articleId">The article id to delete.</param>
        </member>
        <member name="M:JackTheClipperData.ElasticController.GetFeedSelector(System.Collections.Generic.IEnumerable{JackTheClipperCommon.SharedClasses.Feed},System.Int32,System.Int32,System.DateTime,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds and returns the feed selector.
            </summary>
            <param name="feeds">The feeds.</param>
            <param name="from">Starting index for return value (paging).</param>
            <param name="size">Number of items to return (paging).</param>
            <param name="since">The time from which on feeds should be queried.</param>
            <param name="blacklist">The blacklist</param>
            <returns>Function, representing the feed selector.</returns>
        </member>
        <member name="M:JackTheClipperData.ElasticController.GetFeedQuery(System.Collections.Generic.IEnumerable{JackTheClipperCommon.SharedClasses.Feed},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the elastic query for the given feeds.
            </summary>
            <param name="relevantFeeds">The relevant feeds to determine their query.</param>
            <param name="blackList">The blacklist to not violate.</param>
            <returns>The query for the feed.</returns>
        </member>
        <member name="T:JackTheClipperData.ElasticController.TemporaryIndexCleanUp">
            <summary>
            Class which ensures the cleanup of a temporary index operation
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:JackTheClipperData.ElasticController.TemporaryIndexCleanUp.#ctor(JackTheClipperCommon.SharedClasses.ShortArticle,Nest.IElasticClient)">
            <summary>
            Initializes a new instance of the <see cref="T:JackTheClipperData.ElasticController.TemporaryIndexCleanUp"/> class.
            </summary>
            <param name="article">The article.</param>
            <param name="client">The client.</param>
        </member>
        <member name="M:JackTheClipperData.ElasticController.TemporaryIndexCleanUp.Dispose">
            <summary>
            Undoes the temporary index operation
            </summary>
        </member>
        <member name="T:JackTheClipperData.ElasticController.ElasticDuplicateRemover">
            <summary>
            Removes duplicates we cant avoid (Example: Webpage: <p><p>Test</p></p> with Regex //p + asyncness /
            Other example: Some Rss feeds increment the "Published" time after the article has been changed, but not the text)
            Based upon https://www.elastic.co/de/blog/how-to-find-and-remove-duplicate-documents-in-elasticsearch
            </summary>
        </member>
        <member name="M:JackTheClipperData.ElasticController.ElasticDuplicateRemover.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JackTheClipperData.ElasticController.ElasticDuplicateRemover"/> class.
            </summary>
        </member>
        <member name="M:JackTheClipperData.ElasticController.ElasticDuplicateRemover.CleanUp(System.Object)">
            <summary>
            Performs the clean up job.
            </summary>
            <param name="state">State param, never used.</param>
        </member>
        <member name="M:JackTheClipperData.ElasticController.ElasticDuplicateRemover.GetAllDocumentsInIndex(Nest.IElasticClient)">
            <summary>
            Gets all documents within elastic.
            Based upon http://telegraphrepaircompany.com/elasticsearch-nest-scroll-api-c/
            </summary>
            <param name="client">The client to use.</param>
            <returns>Enumerable of all articles within the ElasticSearch server.</returns>
        </member>
        <member name="T:JackTheClipperData.IClipperDatabase">
            <summary>
            Interface for the clipper database.
            </summary>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetUserById(System.Guid)">
            <summary>
            Gets the user by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The user (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetUserByMailAddress(System.String)">
            <summary>
            Gets the user by mail address.
            </summary>
            <param name="mailAddress">The mail address.</param>
            <returns>The user (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetOrganizationalUnitById(System.Guid)">
            <summary>
            Gets the organizational unit by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The unit (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetUserByCredentials(System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Gets the user by credentials.
            </summary>
            <param name="mailOrName">The mail or name.</param>
            <param name="password">The password.</param>
            <param name="principalUnit">The principal unit.</param>
            <param name="updateLoginTimeStamp">A value indicating whether the login timestamp should be updated or not.</param>
            <returns>The user (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetSources">
            <summary>
            Gets all sources.
            </summary>
            <returns>List of all sources.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetNotifiableUserSettings">
            <summary>
            Gets all notifiable user settings
            ("notifiable" = only those which have set <see cref="P:JackTheClipperCommon.SharedClasses.UserSettings.NotificationSettings"/> != <see cref="F:JackTheClipperCommon.Enums.NotificationSetting.None"/>).
            </summary>
            <returns>List of all notifiable user settings.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetAvailableSources(System.Guid)">
            <summary>
            Gets the available sources.
            </summary>
            <param name="userId">The user.</param>
            <returns>List of available sources.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetOrganizationalUnits(System.Guid)">
            <summary>
            Gets the available organizational units.
            </summary>
            <param name="userId">The user id.</param>
            <returns>List of available units.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.AddUser(System.String,System.String,System.String,JackTheClipperCommon.Enums.Role,System.Guid,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Adds a user.
            </summary>
            <param name="userMail">The user mail.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="role">The role.</param>
            <param name="principalUnit">The principal unit.</param>
            <param name="initialUnit">The initial unit of the user.</param>
            <param name="mustChangePassword">A value indicating whether the user must change the pw.</param>
            <param name="valid">A value whether the user is valid or not.</param>
            <returns>The user object of the new user.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.DeleteUser(System.Guid)">
            <summary>
            Deletes the user.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>MethodResult, indicates success</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.AddSource(JackTheClipperCommon.SharedClasses.Source)">
            <summary>
            Adds a source.
            </summary>
            <param name="source">The source.</param>
            <returns>The object of the new source.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.DeleteSource(System.Guid)">
            <summary>
            Deletes the source.
            </summary>
            <param name="source">The source.</param>
            <returns>succesfull bool</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.UpdateSource(JackTheClipperCommon.SharedClasses.Source)">
            <summary>
            Updates the source.
            </summary>
            <param name="updatedSource">The updated source.</param>
            <returns>MethodResult indicating success</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.ResetPassword(System.String,System.String)">
            <summary>
            Resets the users password.
            </summary>
            <param name="userMail"></param>
            <param name="newPassword">The new password to set.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.ChangePassword(JackTheClipperCommon.SharedClasses.User,System.String)">
            <summary>
            Changes the users password.
            </summary>
            <param name="user">The users mail address.</param>
            <param name="newPassword">The new password to set.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.ChangeMailAddress(JackTheClipperCommon.SharedClasses.User,System.String)">
            <summary>
            Changes the users mail address.
            </summary>
            <param name="user">The user.</param>
            <param name="newUserMail">The users new mail address.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetSuperSetFeed">
            <summary>
             Gets the superset feed filter.
             This is a feed filter which contains all relevant keywords form any feed within the system.
             </summary>
             <returns>The superset feed filter.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetPrincipalUnitBasicInformation">
            <summary>
            Gets the principal units.
            </summary>
            <returns>List of principal units.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.SaveUserSettings(System.Guid,System.Int32,JackTheClipperCommon.Enums.NotificationSetting,System.Int32)">
            <summary>
            Saves the user settings.
            </summary>
            <param name="settingsId">The settings identifier.</param>
            <param name="notificationCheckInterval">The notification check interval.</param>
            <param name="notificationSetting">The notification setting.</param>
            <param name="articlesPerPage">The articles per page.</param>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.AddFeed(System.Guid,JackTheClipperCommon.SharedClasses.Feed)">
            <summary>
            Adds the given feed.
            </summary>
            <param name="settingsId">The settings id.</param>
            <param name="feed">The feed to add.</param>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.ModifyFeed(System.Guid,JackTheClipperCommon.SharedClasses.Feed)">
            <summary>
            Modifies the feed.
            </summary>
            <param name="settingsId">The settings id.</param>
            <param name="feed">The feed to add.</param>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.DeleteFeed(System.Guid)">
            <summary>
            Deletes the feed.
            </summary>
            <param name="feedId">The feed id.</param>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.AddPrincipalUnit(System.String,System.String,System.String)">
            <summary>
            Adds a principal unit.
            </summary>
            <param name="unitName">Name of the unit.</param>
            <param name="adminMailAddress">The admin mail address.</param>
            <param name="adminPassword">The admin password.</param>
            <returns>Tuple of new values.
            <para>Item1 = Id of new principal unit.</para>
            <para>Item2 = Id of new <see cref="F:JackTheClipperCommon.Enums.Role.StaffChief"/>-user.</para>
            </returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.AddUnit(System.String,System.Guid)">
            <summary>
            Adds a new unit unit.
            </summary>
            <param name="unitName">Name of the unit.</param>
            <param name="parentUnit">The id of the parent unit.</param>
            <returns>The id of the new unit.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.DeleteOrganizationalUnit(System.Guid)">
            <summary>
            Deletes an organizational unit.
            </summary>
            <param name="unitId">The unit identifier.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.RenameOrganizationalUnit(System.Guid,System.String)">
            <summary>
            Renames an organizational unit.
            </summary>
            <param name="toChange">The id of the unit to change.</param>
            <param name="name">The new name.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.SaveOrganizationalUnitSettings(JackTheClipperCommon.SharedClasses.OrganizationalUnitSettings)">
            <summary>
            Changes the organizational unit settings to the given ones.
            </summary>
            <param name="changed">The changed settings to persist.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.SetUserOrganizationalUnits(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets the organizational units of a user.
            </summary>
            <param name="userId">The user id of the changed user.</param>
            <param name="units">The organizational units.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetPrincipalUnitChildren(System.Guid)">
            <summary>
            Gets the children of a principal unit.
            </summary>
            <param name="principalUnitId">The principal unit identifier.</param>
            <returns>List of children of given principal unit.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetPrincipalUnits">
            <summary>
            Gets all principal units.
            </summary>
            <returns>The principal units</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetOrganizationalUnitSettings(System.Guid)">
            <summary>
            Gets the organizational unit settings.
            </summary>
            <param name="unitId">The organizational unit id.</param>
            <returns>The requested settings.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetUserSettingsByUserId(System.Guid)">
            <summary>
            Gets the user settings.
            </summary>
            <param name="userId">The settings id.</param>
            <returns>The requested settings.</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetManageableUsers(System.Guid)">
            <summary>
            Returns the basic information of the users the supplied user can manage
            </summary>
            <param name="userId">The id of the user requesting the information</param>
            <returns>List of basic information like the id and username of the manageable users</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetUserInfo(System.Guid)">
            <summary>
            Gets all the information on a requested user
            </summary>
            <param name="requested">The id of the user whose information is requested</param>
            <returns>An <see cref="T:JackTheClipperCommon.SharedClasses.ExtendedUser"/> containing all the information</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetFeedRequestData(System.Guid,System.Guid)">
            <summary>
            Prepares a request to see the articles of the given feed
            </summary>
            <param name="userId">The user owning the feed</param>
            <param name="feedId">The id of the feed</param>
            <returns>A tuple containing the fully instantiated <see cref="T:JackTheClipperCommon.SharedClasses.Feed"/>, the
            last login time of the user and how many articles he wants to see on a single
            page</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.ModifyUser(System.Guid,System.String,JackTheClipperCommon.Enums.Role,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Modifies a user
            </summary>
            <param name="userId">The id of the user to modify</param>
            <param name="userName">The new username of the user</param>
            <param name="role">The new role of the user</param>
            <param name="valid">Whether the user is allowed to use the application</param>
            <param name="userUnits">The <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s the user should belong to</param>
            <returns>A <see cref="T:JackTheClipperCommon.SharedClasses.MethodResult"/> indicating success</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetUnitInheritedBlackList(System.Guid)">
            <summary>
            Gets the blacklist that a user has by belonging to certain <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s
            </summary>
            <param name="userId">The id of the user</param>
            <returns>List of all blacklisted keywords for this user</returns>
        </member>
        <member name="M:JackTheClipperData.IClipperDatabase.GetEligibleStaffChiefs(System.Guid)">
            <summary>
            Gets the user that are allowed to manage the unit
            </summary>
            <param name="affectedUnit">The id of the unit</param>
            <returns>List of users that can manage the unit</returns>
        </member>
        <member name="T:JackTheClipperData.IIndexerService">
            <summary>
            Interface for any indexer service 
            </summary>
        </member>
        <member name="M:JackTheClipperData.IIndexerService.ClearIndex">
            <summary>
            Clears all indexes
            Warning: This is not reversible.
            Proceed with Caution
            </summary>
        </member>
        <member name="M:JackTheClipperData.IIndexerService.IndexRssFeedItemThreadSafeAsync(JackTheClipperCommon.SharedClasses.Article,JackTheClipperCommon.BusinessObjects.RssKey)">
            <summary>
            Indexes an RSS article thread safe.
            </summary>
            <param name="article">The article.</param>
            <param name="key">The rss key.</param>
        </member>
        <member name="M:JackTheClipperData.IIndexerService.IndexArticleThreadSafeAsync(JackTheClipperCommon.SharedClasses.Article)">
            <summary>
            Indexes a web site article thread safe.
            </summary>
            <param name="article">The article.</param>
        </member>
        <member name="M:JackTheClipperData.IIndexerService.GetFeedAsync(JackTheClipperCommon.SharedClasses.Feed,System.DateTime,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the requested feed
            </summary>
            <param name="feed">The requested feed.</param>
            <param name="since">The date from which on articles should be considered.</param>
            <param name="articlesPerPage">The amount of articles per page.</param>
            <param name="page">The requested page.</param>
            <param name="unitBlackList"></param>
            <returns>List of articles within the feed</returns>
        </member>
        <member name="M:JackTheClipperData.IIndexerService.GetCompleteFeedAsync(JackTheClipperCommon.SharedClasses.UserSettings,System.DateTime)">
            <summary>
            Gets the complete feed (= all relevant articles in any feed) of a given user setting.
            </summary>
            <param name="userSettings">The user settings for which the complete feed is requested</param>
            <param name="since">The date from which on articles should be considered.</param>
            <returns>List of articles within any feed of the user.</returns>
        </member>
        <member name="M:JackTheClipperData.IIndexerService.GetArticleAsync(System.Guid)">
            <summary>Gets a specific Article.</summary>
            <param name="articleId">The Id of the article to search.</param>
            <returns>The article (if exists)</returns>
        </member>
        <member name="T:JackTheClipperData.MariaDb.MariaDbAdapter">
            <summary>
            Adapter for MariaDb/MySql which implements the <see cref="T:JackTheClipperData.IClipperDatabase"/> interface
            </summary>
            <seealso cref="T:JackTheClipperData.IClipperDatabase" />
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUserById(System.Guid)">
            <summary>
            Gets the user by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The user (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetOrganizationalUnitById(System.Guid)">
            <summary>
            Gets the organizational unit by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The unit (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUserByCredentials(System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Gets the user by credentials.
            </summary>
            <param name="mailOrName">The mail.</param>
            <param name="password">The password.</param>
            <param name="principalUnit">The principal unit.</param>
            <param name="updateLoginTimeStamp">A value indicating whether the login timestamp should be updated or not.</param>
            <returns>The user (if found)</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetSources">
            <summary>
            Gets all sources.
            </summary>
            <returns>List of all sources.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetNotifiableUserSettings">
            <summary>
            Gets all notifiable user settings
            ("notifiable" = only those which have set <see cref="P:JackTheClipperCommon.SharedClasses.UserSettings.NotificationSettings"/> != <see cref="F:JackTheClipperCommon.Enums.NotificationSetting.None"/>).
            </summary>
            <returns>List of all notifiable user settings.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetAvailableSources(System.Guid)">
            <summary>
            Gets the available sources.
            </summary>
            <param name="userId">The user.</param>
            <returns>List of available sources.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetOrganizationalUnits(System.Guid)">
            <summary>
            Gets the available organizational units.
            </summary>
            <param name="userId">The user id.</param>
            <returns>List of available units.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddUser(System.String,System.String,System.String,JackTheClipperCommon.Enums.Role,System.Guid,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Adds a user.
            </summary>
            <param name="userMail">The user mail.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="role">The role.</param>
            <param name="principalUnit">The principal unit.</param>
            <param name="initialUnit">The initial unit of the user.</param>
            <param name="mustChangePassword">A value indicating whether the user must change the pw.</param>
            <param name="valid">A value whether the user is valid or not.</param>
            <returns>The user object of the new user.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteUser(System.Guid)">
            <summary>
            Deletes the given user.
            </summary>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddSource(JackTheClipperCommon.SharedClasses.Source)">
            <summary>
            Adds a source.
            </summary>
            <param name="source">The source.</param>
            <returns>The object of the new source.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteSource(System.Guid)">
            <summary>
            Deletes the source.
            </summary>
            <param name="source">The source.</param>
            <returns>
            True if successful
            </returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.UpdateSource(JackTheClipperCommon.SharedClasses.Source)">
            <summary>
            Updates the source.
            </summary>
            <param name="updatedSource">The updated source.</param>
            <returns>MethodResult indicating success</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SaveUserSettings(System.Guid,System.Int32,JackTheClipperCommon.Enums.NotificationSetting,System.Int32)">
            <summary>
            Saves the user settings.
            </summary>
            <param name="settingsId">The settings identifier.</param>
            <param name="notificationCheckInterval">The notification check interval.</param>
            <param name="notificationSetting">The notification setting.</param>
            <param name="articlesPerPage">The articles per page.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddFeed(System.Guid,JackTheClipperCommon.SharedClasses.Feed)">
            <summary>
            Adds the given feed.
            </summary>
            <param name="settingsId">The settings id.</param>
            <param name="feed">The feed to add.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ModifyFeed(System.Guid,JackTheClipperCommon.SharedClasses.Feed)">
            <summary>
            Modifies the feed.
            </summary>
            <param name="settingsId">The settings id.</param>
            <param name="feed">The feed to add.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteFeed(System.Guid)">
            <summary>
            Deletes the feed.
            </summary>
            <param name="feedId">The feed id.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ResetPassword(System.String,System.String)">
            <summary>
            Resets the users password.
            </summary>
            <param name="userMail">The users mail address.</param>
            <param name="newPassword">The new password to set.</param>
            <returns>MethodResult, indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ChangePassword(JackTheClipperCommon.SharedClasses.User,System.String)">
            <summary>
            Changes the users password.
            </summary>
            <param name="user">The user.</param>
            <param name="newPassword">The new password to set.</param>
            <returns>MethodResult, indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ChangeMailAddress(JackTheClipperCommon.SharedClasses.User,System.String)">
            <summary>
            Change the users mail address.
            </summary>
            <param name="user">The user.</param>
            <param name="newUserMail">The new mail address to set.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetSuperSetFeed">
            <summary>
            Gets the superset feed filter.
            This is a feed filter which contains all relevant keywords form any feed within the system.
            </summary>
            <returns>The superset feed filter.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddPrincipalUnit(System.String,System.String,System.String)">
            <summary>
            Adds a principal unit.
            </summary>
            <param name="unitName">Name of the unit.</param>
            <param name="adminMailAddress">The admin mail address.</param>
            <param name="adminPassword">The admin password.</param>
            <returns>Tuple of new values.
            <para>Item1 = Id of new principal unit.</para>
            <para>Item2 = Id of new <see cref="F:JackTheClipperCommon.Enums.Role.StaffChief"/>-user.</para>
            </returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddUnit(System.String,System.Guid)">
            <summary>
            Adds a new unit unit.
            </summary>
            <param name="unitName">Name of the unit.</param>
            <param name="parentUnit">The id of the parent unit.</param>
            <returns>The id of the new unit.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.RenameOrganizationalUnit(System.Guid,System.String)">
            <summary>
            Renames an organizational unit.
            </summary>
            <param name="toChange">The id of the unit to change.</param>
            <param name="name">The new name.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteOrganizationalUnit(System.Guid)">
            <summary>
            Deletes an organizational unit.
            </summary>
            <param name="unitId">The unit identifier.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SaveOrganizationalUnitSettings(JackTheClipperCommon.SharedClasses.OrganizationalUnitSettings)">
            <summary>
            Changes the organizational unit settings to the given ones.
            </summary>
            <param name="changed">The changed settings to persist.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetPrincipalUnitChildren(System.Guid)">
            <summary>
            Gets the children of a principal unit.
            </summary>
            <param name="principalUnitId">The principal unit identifier.</param>
            <returns>List of children of given principal unit.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetPrincipalUnits">
            <summary>
            Gets all principal units.
            </summary>
            <returns>The principal units</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetOrganizationalUnitSettings(System.Guid)">
            <summary>
            Gets the organizational unit settings.
            </summary>
            <param name="unitId">The organizational unit id.</param>
            <returns>The requested settings.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUserSettingsByUserId(System.Guid)">
            <summary>
            Gets the user settings.
            </summary>
            <param name="userId">The settings id.</param>
            <returns>The requested settings.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetManageableUsers(System.Guid)">
            <summary>
            Returns the basic information of the users the supplied user can manage
            </summary>
            <param name="userId">The id of the user requesting the information</param>
            <returns>List of basic information like the id and username of the manageable users</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUserInfo(System.Guid)">
            <summary>
            Gets all the information on a requested user
            </summary>
            <param name="requested">The id of the user whose information is requested</param>
            <returns>An <see cref="T:JackTheClipperCommon.SharedClasses.ExtendedUser"/> containing all the information</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetFeedRequestData(System.Guid,System.Guid)">
            <summary>
            Prepares a request to see the articles of the given feed
            </summary>
            <param name="userId">The user owning the feed</param>
            <param name="feedId">The id of the feed</param>
            <returns>A tuple containing the fully instantiated <see cref="T:JackTheClipperCommon.SharedClasses.Feed"/>, the
            last login time of the user and how many articles he wants to see on a single
            page</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ModifyUser(System.Guid,System.String,JackTheClipperCommon.Enums.Role,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Modifies a user
            </summary>
            <param name="userId">The id of the user to modify</param>
            <param name="userName">The new username of the user</param>
            <param name="role">The new role of the user</param>
            <param name="valid">Whether the user is allowed to use the application</param>
            <param name="userUnits">The <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s the user should belong to</param>
            <returns>A <see cref="T:JackTheClipperCommon.SharedClasses.MethodResult"/> indicating success</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUnitInheritedBlackList(System.Guid)">
            <summary>
            Gets the blacklist that a user has by belonging to certain <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s
            </summary>
            <param name="userId">The id of the user</param>
            <returns>List of all blacklisted keywords for this user</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetEligibleStaffChiefs(System.Guid)">
            <summary>
            Gets the user that are allowed to manage the unit
            </summary>
            <param name="affectedUnit">The id of the unit</param>
            <returns>List of users that can manage the unit</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetPrincipalUnitBasicInformation">
            <summary>
            Gets the principal units.
            </summary>
            <returns>List of principal units.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SetUserOrganizationalUnits(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets the organizational units of a user.
            </summary>
            <param name="userId">The user id of the changed user.</param>
            <param name="units">The organizational units.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUserSettingsAsync(System.Boolean,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Gets the <see cref="T:JackTheClipperCommon.SharedClasses.UserSettings"/> by id.
            </summary>
            <param name="unitSettings">A value indicating whether <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnitSettings"/> are requested or not.</param>
            <param name="stmt">The statement to execute.</param>
            <param name="parameters">The parameters.</param>
            <returns>The determined <see cref="T:JackTheClipperCommon.SharedClasses.UserSettings"/>.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetSourcesAsync(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Gets all sources by executing the given command
            </summary>
            <param name="command">The command to execute.</param>
            <param name="parameters">The query parameters.</param>
            <returns>List of sources.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUsersAsync(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Gets all users by executing the given command
            </summary>
            <param name="command">The command to execute.</param>
            <param name="parameters">The query parameters.</param>
            <returns>List of returned users.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.UpdateLoginTimestampAsync(System.Guid)">
            <summary>
            Updates the login time stamp.
            </summary>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddUserAsync(System.String,System.String,System.String,JackTheClipperCommon.Enums.Role,System.Guid,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Adds a user.
            </summary>
            <param name="userMail">The user mail.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="role">The role.</param>
            <param name="principalUnit">The principalUnit.</param>
            <param name="initialUnit">The initial unit.</param>
            <param name="mustChangePassword">A value indicating whether the user must change the pw.</param>
            <param name="valid">A value whether the user is valid or not.</param>
            <returns>The user object of the new user.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddSourceAsync(JackTheClipperCommon.SharedClasses.Source)">
            <summary>
            Adds a source.
            </summary>
            <param name="source">The source.</param>
            <returns>The object of the new source.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddPrincipalUnitAsync(System.String,System.String,System.String)">
            <summary>
            Adds a principal unit.
            </summary>
            <param name="unitName">Name of the unit.</param>
            <param name="adminMailAddress">The admin mail address.</param>
            <param name="adminPassword">The admin password.</param>
            <returns>Tuple of new values.
            <para>Item1 = Id of new principal unit.</para>
            <para>Item2 = Id of new <see cref="F:JackTheClipperCommon.Enums.Role.StaffChief"/>-user.</para>
            </returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddUnitAsync(System.String,System.Guid)">
            <summary>
            Adds a new unit asynchronously.
            </summary>
            <param name="unitName">Name of the unit.</param>
            <param name="parentUnit">The parent of the new unit.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ModifyUnitAsync(System.Guid,System.String)">
            <summary>
            Renames an organizational unit.
            </summary>
            <param name="toChange">The id of the unit to change.</param>
            <param name="name">The new name.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteUnitAsync(System.Guid)">
            <summary>
            Deletes the given unit asynchronously.
            </summary>
            <param name="unitId">The unit identifier.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.EnableOrDisableSourceForUnitAsync(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Enables the or disables a source for a unit asynchronously.
            </summary>
            <param name="unitSettingsId">The unit settings identifier.</param>
            <param name="sourceId">The source identifier.</param>
            <param name="disable">A value indicating whether the source should be disabled (=true) or enabled.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteSourceAsync(System.Guid)">
            <summary>
            Deletes the source asynchronous.
            </summary>
            <param name="sourceId">The source id.</param>
            <returns>True if successful false otherwise</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteUserAsync(System.Guid)">
            <summary>
            Deletes a user asynchronous.
            </summary>
            <param name="userId">The user id.</param>
            <returns>MethodResult indicating success</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SaveUserSettingsAsync(System.Guid,System.Int32,JackTheClipperCommon.Enums.NotificationSetting,System.Int32)">
            <summary>
            Saves the user settings asynchronously.
            </summary>
            <param name="settingsId">The settings identifier.</param>
            <param name="notificationCheckInterval">The notification check interval.</param>
            <param name="notificationSetting">The notification setting.</param>
            <param name="articlesPerPage">The articles per page.</param>
            <returns></returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SetOrganizationalUnitBlackListAsync(System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the organizational unit black list asynchronously.
            </summary>
            <param name="settingsId">The settings identifier.</param>
            <param name="blackList">The black list.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.AddFeedAsync(System.Guid,JackTheClipperCommon.SharedClasses.Feed)">
            <summary>
            Adds the feed asynchronously.
            </summary>
            <param name="settingsId">The settings identifier.</param>
            <param name="feed">The feed.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ModifyFeedAsync(System.Guid,JackTheClipperCommon.SharedClasses.Feed)">
            <summary>
            Modifies the feed asynchronously.
            </summary>
            <param name="settingsId">The settings identifier.</param>
            <param name="feed">The feed.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.DeleteFeedAsync(System.Guid)">
            <summary>
            Deletes the feed asynchronously.
            </summary>
            <param name="feedId">The feed identifier.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.LinkSourceToFeed(System.Guid,System.Guid)">
            <summary>
            Links a source to a feed.
            </summary>
            <param name="feedId">The feed identifier.</param>
            <param name="sourceId">The source identifier.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.UnlinkSourceFromFeed(System.Guid,System.Guid)">
            <summary>
            Unlinks a source from a feed.
            </summary>
            <param name="feedId">The feed identifier.</param>
            <param name="sourceId">The source identifier.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.CreateOrUpdateFeed(System.Guid,System.String,System.Guid)">
            <summary>
            Creates the or updates a feed.
            </summary>
            <param name="feedId">The feed identifier.</param>
            <param name="name">The name.</param>
            <param name="filterId">The filter identifier.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.CreateOrUpdateFilter(JackTheClipperCommon.SharedClasses.Filter)">
            <summary>
            Creates the or updates the filter.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ChangePasswordAsync(System.String,System.String,System.Boolean)">
            <summary>
            Changes the users password.
            </summary>
            <param name="userMail">The users mail address.</param>
            <param name="password">The new password to set.</param>
            <param name="mustChangePassword"></param>
            <returns>MethodResult, indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ChangeMailAddressAsync(JackTheClipperCommon.SharedClasses.User,System.String)">
            <summary>
            Change the users mail address.
            </summary>
            <param name="user">The user.</param>
            <param name="newUserMail">The new mail address to set.</param>
            <returns>MethodResult indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetSuperSetFeedAsync">
            <summary>
            Gets the superset feed.
            </summary>
            <returns>The superset feed.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetStringGuidTupleList(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Gets a list of <see cref="T:System.Tuple`2"/>s from the database.
            </summary>
            <param name="command">The command.</param>
            <param name="parameters">The parameters.</param>
            <returns>Obtained list of <see cref="T:System.Tuple`2"/>s.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetBasicUserInfo(System.String)">
            <summary>
            Returns the basic information of users by executing the command
            </summary>
            <param name="command">SQL query to execute</param>
            <returns>List of basic information like the id and username of the manageable users</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.PerformUserSourceInheritance(System.Guid)">
            <summary>
            Performs the user source inheritance.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetFeedRequestDataAsync(System.Guid,System.Guid)">
            <summary>
            Prepares a request to see the articles of the given feed
            </summary>
            <param name="userId">The user owning the feed</param>
            <param name="feedId">The id of the feed</param>
            <returns>A tuple containing the fully instantiated <see cref="T:JackTheClipperCommon.SharedClasses.Feed"/>, the
            last login time of the user and how many articles he wants to see on a single
            page</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SetUserOrganizationalUnitsAsync(System.Guid,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Sets the organizational units of a user.
            </summary>
            <param name="userId">The user id of the changed user.</param>
            <param name="units">The organizational units the user should now belong to.</param>
            <returns><see cref="T:JackTheClipperCommon.SharedClasses.MethodResult"/> indicating success.</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.ModifyUserAsync(System.Guid,System.String,JackTheClipperCommon.Enums.Role,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Modifies a user
            </summary>
            <param name="userId">The id of the user to modify</param>
            <param name="userName">The new username of the user</param>
            <param name="role">The new role of the user</param>
            <param name="valid">Whether the user is allowed to use the application</param>
            <param name="userUnits">The <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s the user should belong to</param>
            <returns>A <see cref="T:JackTheClipperCommon.SharedClasses.MethodResult"/> indicating success</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GetUnitInheritedBlackListAsync(System.Guid)">
            <summary>
            Gets the blacklist that a user has by belonging to certain <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s
            </summary>
            <param name="userId">The id of the user</param>
            <returns>List of all blacklisted keywords for this user</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.GuidToDatabaseUuid(System.Guid)">
            <summary>
            Maps a <see cref="T:System.Guid"/> to a value that MariaDB can understand
            </summary>
            <param name="guid">The guid to map</param>
            <returns>The mapped version of the supplied guid</returns>
        </member>
        <member name="T:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager">
            <summary>
            This class is inefficient, and should maybe be replaced by a better implementation (far in the future).
            Also it is not clear if this becomes a performance issue at all.
            </summary>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager.#ctor(JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager@)">
            <summary>
            Initializes the <see cref="F:JackTheClipperData.MariaDb.MariaDbAdapter.cachedManager"/>
            </summary>
            <param name="cachedManager">The <see cref="T:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager"/> to initialize</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager.GetOrganizationalUnit(System.Guid)">
            <summary>
            Gets a <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/> by its id
            </summary>
            <param name="unitId">The id of the unit</param>
            <returns><see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/> that matches the supplied Guid</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager.GetAllOrganizationalUnits">
            <summary>
            Gets all organizational units
            </summary>
            <returns>List with all organizational units</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager.GetAllOrganizationalUnitsInTree(System.Guid)">
            <summary>
            Gets all <see cref="T:JackTheClipperCommon.SharedClasses.OrganizationalUnit"/>s that are lower in the hierarchy than the supplied unit
            </summary>
            <param name="startUnit">The id of the unit to start on</param>
            <returns>List of all units below the supplied one</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager.GetPrincipalUnit(System.Guid)">
            <summary>
            Gets the client unit the unit belongs to
            </summary>
            <param name="startUnit">The id of the unit whose client is searched</param>
            <returns>The client unit the supplied unit belongs to</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.OrganizationalUnitManager.GetOrganizationalUnitsAsync(System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Gets all units by executing the given command
            </summary>
            <param name="command">The command to execute.</param>
            <param name="parameters">The query parameters.</param>
            <returns>List of returned units.</returns>
        </member>
        <member name="T:JackTheClipperData.MariaDb.MariaDbAdapter.SupersetFeedCronJob">
            <summary>
            Cron job which periodically updates the superset feed.
            Introduced due to performance reasons, as the superset feed is used (very) often depending on the indexed sources.
            </summary>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SupersetFeedCronJob.#cctor">
            <summary>
            static ctor. May initializes the scheduler.
            </summary>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SupersetFeedCronJob.GetSuperSetFeedFilter">
            <summary>
            Gets the superset filter.
            Note: The returned value might be cached and therefore not up to date.
            </summary>
            <returns>The superset feed filter</returns>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SupersetFeedCronJob.RefreshFilter(System.Object)">
            <summary>
            The scheduled method.
            </summary>
            <param name="timerState">The timer state object. Not used.</param>
        </member>
        <member name="M:JackTheClipperData.MariaDb.MariaDbAdapter.SupersetFeedCronJob.GetSuperSetFeed">
            <summary>
            Gets the superset feed filter.
            This is a feed filter which contains all relevant keywords form any feed within the system.
            </summary>
            <returns>The superset feed filter.</returns>
        </member>
        <member name="T:JackTheClipperData.MariaDb.MariaDbSP">
            <summary>
            Enumeration of stored procedures within maria db.
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_CREATE_USER">
            <summary>
            SP_CREATE_USER(name, mail, pwHash, role, principalUnit, OUT newUserId)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_UPDATE_SOURCE">
            <summary>
            SP_UPDATE_SOURCE(INOUT id,	url, name, type, regex, xpath, blacklist)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_LOG_USERLOGIN">
            <summary>
            SP_LOG_USERLOGIN(userId)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_UPDATE_USERSETTINGS">
            <summary>
            SP_UPDATE_USERSETTINGS(id, _interval, notification, articlesPerPage)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_DEL_SOURCE">
            <summary>
            SP_DEL_SOURCE(id)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_DEL_USER">
            <summary>
            SP_DEL_USER(id)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_UPDATE_FILTER">
            <summary>
            SP_UPDATE_FILTER(id, keywords, expressions, blacklist)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_UPDATE_FEED">
            <summary>
            SP_UPDATE_FEED(id, name, filterId)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_LINK_SOURCE_FEED">
            <summary>
            SP_LINK_SOURCE_FEED(feedId, sourceId)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_LINK_SETTINGS_FEED">
            <summary>
            SP_LINK_SETTINGS_FEED(feedId, settingsId)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_CHANGE_MAILADDRESS">
            <summary>
            SP_CHANGE_MAILADDRESS(userId, newMail, out success)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_CHANGE_USERPW">
            <summary>
            SP_CHANGE_USERPW(mail, pwHash, mustChangePassword, out success)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_CREATE_UNIT">
            <summary>
            SP_CREATE_UNIT(name, parent, OUT newUnitId
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_ADD_USER_UNIT">
            <summary>
            SP_ADD_USER_UNIT(IN userId VARCHAR(36), IN unitId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_REMOVE_USER_UNIT">
            <summary>
            SP_REMOVE_USER_UNIT(IN userId VARCHAR(36), IN unitId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_CREATE_PRINZIPALUNIT">
            <summary>
            SP_CREATE_PRINZIPALUNIT(IN name TEXT, IN mail VARCHAR(191), IN adminPwHash TEXT,
                                    OUT newPrincipalUnitId VARCHAR(36),
                                    OUT newUserId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_UPDATE_UNIT">
            <summary>
            SP_UPDATE_UNIT(IN unitId VARCHAR(36), IN name TEXT)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_DELETE_UNIT">
            <summary>
            SP_DELETE_UNIT(IN unitId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_SET_UNIT_BLACKLIST">
            <summary>
            SP_SET_UNIT_BLACKLIST(IN settingsId VARCHAR(36), IN blackList TEXT)
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_ADD_UNIT_SOURCE">
            <summary>
            SP_ADD_UNIT_SOURCE(IN settingsId VARCHAR(36), IN sourceId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_REMOVE_UNIT_SOURCE">
            <summary>
            SP_REMOVE_UNIT_SOURCE(IN settingsId VARCHAR(36), IN sourceId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_DELETE_FEED">
            <summary>
            SP_DELETE_FEED(IN feedId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_REMOVE_SOURCE_FEED">
            <summary>
            SP_REMOVE_SOURCE_FEED(IN feedId VARCHAR(36), IN sourceId VARCHAR(36))
            </summary>
        </member>
        <member name="F:JackTheClipperData.MariaDb.MariaDbSP.SP_UPDATE_USER_AND_CLEAR_USERUNITS">
            <summary>
            SP_UPDATE_USER_AND_CLEAR_USERUNITS(IN userId VARCHAR(36), IN name TEXT, IN role BIT(4), IN valid BOOL)
            </summary>
        </member>
        <member name="T:JackTheClipperData.MariaDb.MariaDbStatements">
            <summary>
            The (data retrieving) sql statements for maria db.
            </summary>
        </member>
    </members>
</doc>
